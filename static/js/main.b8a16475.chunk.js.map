{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAW,sDAAhB,UACG,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACvB,gCACI,6BAAKF,IACL,4BAAIC,WCcDK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,8BAEGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAECR,GAAKK,EAAOG,GAAGR,GACfF,KAAOO,EAAOG,GAAGV,KACjBC,MAAOM,EAAOG,GAAGT,OAHbS,SCMHC,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAE7B,OACI,qBAAKV,UAAU,MAAf,SAEA,uBACAA,UAAU,mCACVW,KAAK,SACJC,YAAY,gBACZC,SAAWH,OCALI,G,MATA,SAACC,GAChB,OAEI,aADA,CACA,OAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,aCcAC,E,kDAjBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOlB,SAAkBC,EAAOC,GACtBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE3B,WACG,OAAGG,KAAKJ,MAAMC,SACH,wCAEJG,KAAKX,MAAMK,a,GAfCQ,aC+DZC,E,kDAtDX,aAAc,IAAD,8BAET,gBAgBJC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAAClB,YAAYsB,EAAMC,OAAOC,SAjBxC,EAAKX,MAAO,CAGRlB,OAAQ,GACRK,YAAY,IAPP,E,qDAWb,WAAoB,IAAD,OACfyB,MAAM,8CACL5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAE1B9C,MAAK,SAAA+C,GAAU,EAAKV,SAAS,CAACvB,OAAOiC,S,oBAQ1C,WAAU,IAAD,OAGKC,EAAiBZ,KAAKJ,MAAMlB,OAAOmC,QAAO,SAAAC,GAEhD,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS,EAAKpB,MAAMb,YAAYgC,kBAIpE,OAAgC,IAA7Bf,KAAKJ,MAAMlB,OAAOuC,OACX,yCAGN,sBAAK3C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBAEA,cAAC,EAAD,CAAWU,aAAegB,KAAKI,iBAE/B,cAAC,EAAD,UAEI,cAAC,EAAD,UACJ,cAAC,EAAD,CAAU1B,OAAQkC,e,GA9CZV,aCDlBgB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAChD5D,M","file":"static/js/main.b8a16475.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return(\n        <div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n           <img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\n        <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    \n    return(\n        <div>\n            {\n           robots.map((user, i) => {\n            return(\n             <Card \n             key={i}\n              id ={robots[i].id} \n              name ={robots[i].name} \n              email={robots[i].email}\n              />\n        )\n    })\n}\n        </div>\n    );\n}\nexport default CardList; ","import React from \"react\";\n\nconst Searchbox = ({searchfield, searchChange}) => {\n\n    return (\n        <div className=\"pa2\">\n\n        <input \n        className=\"pa3 ba b--green bg-lightest-blue\" \n        type=\"search\"\n         placeholder=\"search robots\"\n         onChange ={searchChange}\n         />\n        \n        </div>\n    )\n}\nexport default Searchbox;","import React from \"react\";\n\nconst Scroll = (props) => {\nreturn (\n    // style in jsx within double {{}}= js=>obj=>style\n    <div style = {{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n        {props.children}\n    </div>\n)\n}\n\nexport default Scroll;","import React, {Component} from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n     }\n\n     componentDidCatch(error, info){\n        this.setState({hasError:true})\n     }\n     render(){\n        if(this.state.hasError){\n            return <h1>Oooops</h1>\n        }\n        return this.props.children\n     }\n}\nexport default ErrorBoundry;","//                 * \nimport React, {Component} from \"react\";\nimport CardList from \"../components/CardList\";\nimport Searchbox from \"../components/Searchbox\";\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\n// component insted of react.component *\nclass App extends Component {\n    // declaring the state\n    constructor(){\n        // in order to use this,you have to use super(),calls the cunstructor\n        super()\n        this.state= {\n            // two states in the app component\n            // robots: robots,\n            robots: [],\n            searchfield:\"\"\n        }\n    }\n    // fetching data from an extrernal api\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n                    // if you add robots you will see the robots objs insted of\n        .then(users => {this.setState({robots:users})});   \n    }\n    // search input change event\n    onSearchChange = (event) => {\n        // always with an event,event.target.value(giving the value)\n        this.setState({searchfield:event.target.value})\n        \n    }\n    render() {\n        // you can use const { robots, searchfield} = this.state and remove it from the following lines so is cleaner.\n        // distructuring *\n            const filteredRobots = this.state.robots.filter(robot =>{\n                // compering,filtering\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n            // if the connection is slow you add an if else statment or ternary\n            // insted of ===0 you can use ! \n        if(this.state.robots.length === 0){\n            return<h1>Loading</h1>\n        }else{\n        return (\n            <div className=\"tc\">\n            <h1 className='f1'>RoboFriends</h1>\n            {/* use this. because is comming from obj */}\n            <Searchbox searchChange ={this.onSearchChange}/>  \n            {/* destructuring, insted of this.filterRobots */}\n            <Scroll>\n                {/* add scroll */}\n                <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n                </ErrorBoundry>\n            </Scroll>\n            </div>\n          );\n        }\n    }\n}\n   \n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n// pre defined class names\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}